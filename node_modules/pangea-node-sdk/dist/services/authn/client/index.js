import BaseService from "../../../services/base.js";
import ClientSession from "./session.js";
import ClientPassword from "./password.js";
import ClientToken from "./token.js";
export default class Client extends BaseService {
    constructor(token, config) {
        super("authn", token, config);
        Object.defineProperty(this, "session", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "password", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "clientToken", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.apiVersion = "v1";
        this.session = new ClientSession(token, config);
        this.password = new ClientPassword(token, config);
        this.clientToken = new ClientToken(token, config);
    }
    // authn::/v1/client/userinfo
    /**
     * @summary Get User (client token)
     * @description Retrieve the logged in user's token and information.
     * @operationId authn_post_v1_client_userinfo
     * @param {String} code - A one-time ticket
     * @returns {Promise<PangeaResponse<AuthN.Client.UserinfoResult>>} - A promise
     * representing an async call to the endpoint
     * @example
     * ```js
     * const response = await authn.client.userinfo(
     *   "pmc_d6chl6qulpn3it34oerwm3cqwsjd6dxw",
     * );
     * ```
     */
    userinfo(code) {
        const data = {
            code: code,
        };
        return this.post("client/userinfo", data);
    }
    // authn::/v1/client/jwks
    /**
     * @summary Get JWT verification keys
     * @description Get JWT verification keys.
     * @operationId authn_post_v1_client_jwks
     * @returns {Promise<PangeaResponse<AuthN.Client.JWKSResult>>} - A promise
     * representing an async call to the endpoint
     * @example
     * ```js
     * const response = await authn.client.jwks();
     * ```
     */
    jwks() {
        return this.post("client/jwks", {});
    }
}
