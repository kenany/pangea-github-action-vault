import BaseService from "../../../services/base.js";
import FlowEnroll from "./enroll/index.js";
import FlowSignup from "./signup.js";
import FlowVerify from "./verify/index.js";
import FlowReset from "./reset.js";
export default class Flow extends BaseService {
    constructor(token, config) {
        super("authn", token, config);
        Object.defineProperty(this, "enroll", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "signup", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "verify", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "reset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.apiVersion = "v1";
        this.enroll = new FlowEnroll(token, config);
        this.signup = new FlowSignup(token, config);
        this.verify = new FlowVerify(token, config);
        this.reset = new FlowReset(token, config);
    }
    // authn::/v1/flow/complete
    /**
     * @summary Complete Sign-up/in
     * @description Complete a login or signup flow.
     * @operationId authn_post_v1_flow_complete
     * @param {String} flowID - An ID for a login or signup flow
     * @returns {Promise<PangeaResponse<AuthN.Flow.CompleteResult>>} - A promise
     * representing an async call to the endpoint.
     * @example
     * ```js
     * const response = await authn.flow.complete(
     *   "pfl_dxiqyuq7ndc5ycjwdgmguwuodizcaqhh"
     * );
     * ```
     */
    complete(flowID) {
        const data = {
            flow_id: flowID,
        };
        return this.post("flow/complete", data);
    }
    // authn::/v1/flow/start
    /**
     * @summary Start a sign-up/in
     * @description Start a new signup or signin flow.
     * @operationId authn_post_v1_flow_start
     * @param {Object} options - Supported options:
     *   - email (string): An email address
     *   - cb_uri (string http-url): A login callback URI
     *   - flow_types (AuthN.FlowType[]): A list of flow types
     *   - provider (AuthN.IDProvider): Mechanism for authenticating a user's identity
     * @returns {Promise<PangeaResponse<AuthN.Flow.Result>>} - A promise
     * representing an async call to the endpoint.
     * @example
     * ```js
     * const response = await authn.flow.start(
     *   {
     *     email: "joe.user@email.com",
     *     cb_uri: "https://www.myserver.com/callback",
     *     flow_types: [
     *       AuthN.FlowType.SIGNUP,
     *       AuthN.FlowType.SIGNIN,
     *     ],
     *     provider: AuthN.IDProvider.PASSWORD,
     *   }
     * )
     * ```
     */
    start(options) {
        const data = {};
        Object.assign(data, options);
        return this.post("flow/start", data);
    }
}
