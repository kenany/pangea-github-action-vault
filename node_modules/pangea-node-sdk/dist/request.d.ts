import type { Headers } from "got";
import { PostOptions } from "./types.js";
import PangeaConfig from "./config.js";
import { PangeaResponse } from "./response.js";
interface Request extends Object {
    config_id?: string;
}
declare class PangeaRequest {
    private serviceName;
    private token;
    private config;
    private extraHeaders;
    private configID?;
    private userAgent;
    constructor(serviceName: string, token: string, config: PangeaConfig, configID?: string);
    checkConfigID(data: Request): void;
    post(endpoint: string, data: Request, options?: PostOptions): Promise<PangeaResponse<any>>;
    postMultipart(endpoint: string, data: Request, filepath: string, options?: PostOptions): Promise<PangeaResponse<any>>;
    private doPost;
    get(endpoint: string, checkResponse?: boolean): Promise<PangeaResponse<any>>;
    private getDelay;
    private reachTimeout;
    pollResult(requestId: string, checkResponse?: boolean): Promise<PangeaResponse<any>>;
    handleAsync(pangeaResponse: PangeaResponse<any>): Promise<PangeaResponse<any>>;
    setExtraHeaders(headers: any): any;
    setCustomUserAgent(customUserAgent: string | undefined): any;
    getUrl(path: string): string;
    getHeaders(): Headers;
    private checkResponse;
}
export default PangeaRequest;
